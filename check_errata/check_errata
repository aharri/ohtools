#!/bin/sh
#
# $Id: check_errata,v 1.2 2008/03/23 15:59:52 iku Exp $
#
# Copyright (c) 2007 Antti Harri <iku@openbsd.fi>
#
# Permission to use, copy, modify, and distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
#
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
# ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
# ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
# OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
#

### CONFIGURATION
# servers
servers="openbsd.org www.openbsd.org openbsd.alpix.se openbsd.nuug.no"

# email
email=root

# use -u for unified diff
diff_opts="-u"

# where to store "cache"
cache_dir=$HOME/.cache/check_errata

# files, default: 'errata' and 'current'
files="errata$(uname -r | sed 's/\.//').html faq/current.html"
### END OF CONFIGURATION

# override email if specified on the command line
if [ -n "$1" ]; then
	email=$1
fi

# check for links, it makes more readable output
which links 1>/dev/null
if [ "$?" -eq 0 ]; then
	browser=links
else
	browser=lynx
fi

# create the cache directory if it doesn't exist
if [ ! -d "$cache_dir" ]; then mkdir -p "$cache_dir"; fi

# create temporary file and hook it to the exit-event
TMPFILE=$(mktemp) || exit 1
trap "rm -f \"$TMPFILE\"" EXIT

# fetch new results
for file in $files; do
	cache_file=$(basename "$file")

	# create initial file
	if [ ! -e "${cache_dir}/${cache_file}" ]; then touch "${cache_dir}/${cache_file}"; fi

	# go through servers and fetch the files
	for host in $servers; do
		data=$("$browser" -dump "http://${host}/${file}" 2>/dev/null)
		if [ "$?" -eq 0 ]; then break; fi
	done

	if [ -z "$data" ]; then
		break
	fi
	printf "%s\n" "$data" > "$TMPFILE"

	# show the results
	res=$(diff $diff_opts "${cache_dir}/${cache_file}" "$TMPFILE")
	if [ -n "$res" ]; then
		echo "$res" | mail -s "OpenBSD file differs: $file" "$email"
	fi

	# copy the file
	cp -f "$TMPFILE" "${cache_dir}/${cache_file}"
done
