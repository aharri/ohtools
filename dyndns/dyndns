#!/bin/sh
#
# $Id: dyndns,v 1.22 2010/01/12 11:36:32 iku Exp $
#
# Copyright (c) 2008 Antti Harri <iku@openbsd.fi>
#

# Common.
PATH=/bin:/sbin:/usr/bin:/usr/sbin
SYSCONFDIR=/etc
SCRIPTDIR=$(cd -- "$(dirname -- "$0")"; pwd)
# Expire time, can be 'IN' or '30' for example
EXPIRE=30

debuglog()
{
	if [ "$DEBUG" = 1 ]; then
		echo "$1"
	fi
}

if [ -f "${SYSCONFDIR}/dyndns.conf" ]; then
	. "${SYSCONFDIR}/dyndns.conf"
elif [ -f "${SCRIPTDIR}/etc/dyndns.conf" ]; then
	SYSCONFDIR="${SCRIPTDIR}/etc"
	. "${SYSCONFDIR}/dyndns.conf"
else
	echo "Configuration does not exist"
	exit 1
fi

# Tmp
TMP=$(mktemp) || exit 1
TMP2=$(mktemp) || exit 1
trap "rm -f \"$TMP\" \"$TMP2\"" EXIT

# No parameters.
if [ -z "$1" ]; then
	echo "Give interface name as an argument"
	exit 1

# Server mode.
elif [ "$1" = "-s" ]; then
	# Init
	cd "$HOSTS_DIR" || exit 1

	# Cache dir
	if [ ! -d "$CACHE" ]; then
		mkdir "$CACHE" || exit 1
	fi

	while true; do
		cp "$ZONE" "$TMP" || exit 1
		for h in *.host; do
			cmp -s "$h" "$CACHE/$h"
			if [ "$?" != 0 ]; then
				if [ ! -f "$CACHE/$h" ]; then
					cp "$h" "$CACHE/"
				fi

				IP=$(head -n 1 "$h" | egrep -e '^[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+$')
				if [ -n "$IP" ]; then
					MODIFIED=1
					h=$(echo "$h" | cut -f 1 -d '.')
					perl -pi -e "s/^$h\s+(IN|\d+)\s+A.*/$h\t$EXPIRE\tA\t$IP/" "$TMP"
					cp "$h.host" "$CACHE/"
				fi
			fi
		done
		if [ "$MODIFIED" = 1 ]; then
			unset MODIFIED
			date=$(date +%s)
			perl -pi -e "s/[[:digit:]]+\s.*serial/$date ; serial/" "$TMP"
			debuglog "Copying to $ZONE"
			cp "$TMP" "$ZONE" || exit 1
			debuglog "Reloading named"
			sudo rndc reload > /dev/null
		fi
		sleep 20
	done

# Client mode.
else
	if [ ! -f "$KEY" ]; then
		echo "You must generate pubkey before using! Just execute ssh-keygen"
		echo "and save it as $KEY"
		exit 1
	fi
	# Get IP from ifconfig
	IP=$(ifconfig "$1" | fgrep 'inet ' | sed -n 's|^.*inet[a-z :]*\([0-9][^ ]*\) .*$|\1|p') || exit 1
	# Weed out local IPs
	IP=$(printf '%s\n' "$IP" | egrep -v '^(10\.|172\.|192\.)')

	if [ -z "$IP" ]; then
		debuglog 'Empty IP variable'
		exit 1
	fi
	debuglog "Sending IP=$IP to $DEST"

	MYHOST=$(hostname -s)

	echo "$IP" > "$TMP"
	echo "put $TMP ${MYHOST}.host" > "$TMP2"

	sftp -q \
		-i "$KEY" \
		-o PasswordAuthentication=no \
		-o BatchMode=yes \
		-b "$TMP2" \
		"${USER}@${DEST}" > /dev/null
fi
